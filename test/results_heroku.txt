TEST RESULTS - FRIENDFINDER RUNNING ON HEROKU

d = deferred
e = met by enhancement
f = failed
p = passed
s = skipped
w = waiting for further work

Static test case (e.g., on app directory structure or survey content) were skipped. Unit tests and UI tests are run locally and were skipped as well.

Requirements
============
[s] Application has this directory structure:
    FriendFinder
    - .gitignore
    - app
      - data
        - friends.js
      - public
        - home.html
        - survey.html
      - routing
        - apiRoutes.js
        - htmlRoutes.js
    - node_modules
    - package.json
    - server.js
[s] Application has survey of 10 questions
[s] Each question has scale of 1 - 5 based on user agreement/disagreement
[s] server.js requires 'express', 'body-parser' and 'path'
[s] `htmlRoutes.js` includes two routes:
   () GET Route to `/survey` which should display the survey page.
   () Default, catch-all route that leads to `home.html`
[s] `apiRoutes.js` includes two routes:
   () GET route with the url `/api/friends`. This displays a JSON of all possible friends.
   () POST route to `/api/friends`. This handles incoming survey results and provides compatibility logic.
[s] Application data are stored in `app/data/friends.js` as an array of JSON objects.
[s] Each JSON object in friends.js has this format:.
    {
      "name":"Ahmed",
      "photo":"https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/6/005/064/1bd/3435aa3.jpg",
      "scores":[
          5,
          1,
          4,
          4,
          5,
          1,
          2,
          5,
          4,
          1
        ]
    }
[s] Compatibility logic sums absolute value of differences between user and each candidate friend's score on survey. 
[s] Closest match is declared to be candidate with least total difference
[p] Closest match displays as a modal window, with name and picture of match
[p] Application must prevent submission of survey until all questions are answered.

Functionality
=============
[p] Game initializes globals correctly
[p] Game reinitializes globals correctly
[s] All unit tests pass
[s] All UI tests pass
[d] API link on each page retrieves friends information
[p] Github link on each page brings up correct repo

Display
=======
[p] Page closely resembles demo
[f] pictures fit within the modal

Installation
============
[p] Package installs correctly in Heroku
[p] All dependencies are listed in package.json

Cleanup
=======
[s] HTML validates
[s] JS delinted

Heroku
======
[p] Page performs on load as expected
[d] Page performs after reload as expected